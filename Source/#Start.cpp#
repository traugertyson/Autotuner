#include <cstdio>
#include "Strings.h"
#include "PitchFinder.h"
#include "Record.h"
#include "SerialPort.h"
#include <cmath>
int  main()
{
	printf("Hello! Please enter the tuning you want! (-1 for a half step down,1 for a half step up, 0 for standard, etc)\n");
	int tuning;		// stores the amount of steps the tuning will change
	scanf("%d",&tuning);
	Strings string;
	if(tuning != 0)
	{
		string.changeTuning(tuning);
		printf("The new tuning is now: ");
		string.showStrings();
	}
	PitchFinder pitch(FRAMES_PER_BUFFER,SAMPLE_RATE);
	Record stream;
	SerialPort serial("// /dev/ttyACM0
");	// /dev/ttyACM0 is the serial port the arduino is connected to
	serial.initialize();
	float *in;		//in stores the data that comes from the mic
	in = (float *)malloc(FRAMES_PER_BUFFER*sizeof(float));	//allocating enough memory for it
	stream.initialize();
	int freq;
	int diff = 1;
	int whichString = 1;
	while(whichString > 0)
	{
		printf("\n\nWhat string do you want to tune? (1 is lowest, 6 is highest) -1 to quit\n");
		scanf("%d",&whichString);
		if(whichString > 6)
		{
			printf("Please enter a valid string!\n");
		}
		else if(whichString > 0 && whichString <= 6)
		{
			stream.start();			//start recording
			memset(in,0,FRAMES_PER_BUFFER);		//zero out the data in the varible in
			do						
			{
				stream.recordData(in);			//record the data
				freq = pitch.getPitch(in);		//get the pitch and store it in freq				
				if(freq < string.getStringFreq(whichString)*1.3 && freq > 0)	// makes sure any background noise (or no noise at all)  doesn't try and 'tune' the string
				{
					printf("Freq: %d\n",freq);
					diff = pitch.getDifference(freq, string.getStringFreq(whichString));		//get the difference in pitch
					serial.sendInt(pitch.getWhichWay(diff));	//send the right number to the motor
				}
			}while(diff != 0);
			stream.end();	//stop recording
		}

	}	
	return 0;
}
